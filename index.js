"use strict";
/**
 * Created by user on 2018/1/13/013.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const execall2_1 = require("execall2");
const normalize_1 = require("./src/normalize");
function getBlankLine(txt, options = {}) {
    let _ms = execall2_1.execall(/\n+/g, normalize_1.normalize(txt));
    if (_ms.length) {
        let _ret = (_ms)
            .reduce(function (a, b) {
            a.push(b.match.length);
            return a;
        }, []);
        if (options.filter) {
            _ret = _ret.filter(function (v, i, a) {
                return a.indexOf(v) == i;
            });
        }
        if (options.sort) {
            _ret.sort(function (a, b) {
                return a - b;
            });
        }
        return _ret;
    }
    return null;
}
exports.getBlankLine = getBlankLine;
function getMinMidMax(txt) {
    let _ms = getBlankLine(txt, {
        filter: true,
        sort: true,
    });
    if (!_ms || !_ms.length) {
        return [null, null, null];
    }
    let min = _ms[0] || null;
    let max = _ms[_ms.length - 1] || min;
    let mid = _ms[1] || min;
    return [min, mid, max];
}
exports.getMinMidMax = getMinMidMax;
exports.default = getMinMidMax;
//export default exports;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBRUgsdUNBQW1DO0FBQ25DLCtDQUE0QztBQVE1QyxTQUFnQixZQUFZLENBQUMsR0FBRyxFQUFFLFVBQW9CLEVBQUU7SUFFdkQsSUFBSSxHQUFHLEdBQUcsa0JBQU8sQ0FBQyxNQUFNLEVBQUUscUJBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBRTFDLElBQUksR0FBRyxDQUFDLE1BQU0sRUFDZDtRQUNDLElBQUksSUFBSSxHQUFhLENBQUMsR0FBRyxDQUFDO2FBQ3hCLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO1lBRXJCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUV2QixPQUFPLENBQUMsQ0FBQztRQUNWLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FDTjtRQUVELElBQUksT0FBTyxDQUFDLE1BQU0sRUFDbEI7WUFDQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztnQkFFbkMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQixDQUFDLENBQUMsQ0FBQztTQUNIO1FBRUQsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUNoQjtZQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztnQkFFdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2QsQ0FBQyxDQUFDLENBQUM7U0FDSDtRQUVELE9BQU8sSUFBSSxDQUFDO0tBQ1o7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNiLENBQUM7QUFuQ0Qsb0NBbUNDO0FBRUQsU0FBZ0IsWUFBWSxDQUFDLEdBQUc7SUFFL0IsSUFBSSxHQUFHLEdBQUcsWUFBWSxDQUFDLEdBQUcsRUFBRTtRQUMzQixNQUFNLEVBQUUsSUFBSTtRQUNaLElBQUksRUFBRSxJQUFJO0tBQ1YsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQ3ZCO1FBQ0MsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDMUI7SUFFRCxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO0lBQ3pCLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQztJQUVyQyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDO0lBRXhCLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLENBQUM7QUFsQkQsb0NBa0JDO0FBRUQsa0JBQWUsWUFBWSxDQUFDO0FBQzVCLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB1c2VyIG9uIDIwMTgvMS8xMy8wMTMuXG4gKi9cblxuaW1wb3J0IHsgZXhlY2FsbCB9IGZyb20gJ2V4ZWNhbGwyJztcbmltcG9ydCB7IG5vcm1hbGl6ZSB9IGZyb20gJy4vc3JjL25vcm1hbGl6ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU9wdGlvbnNcbntcblx0ZmlsdGVyPzogYm9vbGVhbixcblx0c29ydD86IGJvb2xlYW4sXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCbGFua0xpbmUodHh0LCBvcHRpb25zOiBJT3B0aW9ucyA9IHt9KTogbnVtYmVyW11cbntcblx0bGV0IF9tcyA9IGV4ZWNhbGwoL1xcbisvZywgbm9ybWFsaXplKHR4dCkpO1xuXG5cdGlmIChfbXMubGVuZ3RoKVxuXHR7XG5cdFx0bGV0IF9yZXQ6IG51bWJlcltdID0gKF9tcylcblx0XHRcdC5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpXG5cdFx0XHR7XG5cdFx0XHRcdGEucHVzaChiLm1hdGNoLmxlbmd0aCk7XG5cblx0XHRcdFx0cmV0dXJuIGE7XG5cdFx0XHR9LCBbXSlcblx0XHQ7XG5cblx0XHRpZiAob3B0aW9ucy5maWx0ZXIpXG5cdFx0e1xuXHRcdFx0X3JldCA9IF9yZXQuZmlsdGVyKGZ1bmN0aW9uICh2LCBpLCBhKVxuXHRcdFx0e1xuXHRcdFx0XHRyZXR1cm4gYS5pbmRleE9mKHYpID09IGk7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRpZiAob3B0aW9ucy5zb3J0KVxuXHRcdHtcblx0XHRcdF9yZXQuc29ydChmdW5jdGlvbiAoYSwgYilcblx0XHRcdHtcblx0XHRcdFx0cmV0dXJuIGEgLSBiO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIF9yZXQ7XG5cdH1cblxuXHRyZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1pbk1pZE1heCh0eHQpOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl1cbntcblx0bGV0IF9tcyA9IGdldEJsYW5rTGluZSh0eHQsIHtcblx0XHRmaWx0ZXI6IHRydWUsXG5cdFx0c29ydDogdHJ1ZSxcblx0fSk7XG5cblx0aWYgKCFfbXMgfHwgIV9tcy5sZW5ndGgpXG5cdHtcblx0XHRyZXR1cm4gW251bGwsIG51bGwsIG51bGxdO1xuXHR9XG5cblx0bGV0IG1pbiA9IF9tc1swXSB8fCBudWxsO1xuXHRsZXQgbWF4ID0gX21zW19tcy5sZW5ndGggLSAxXSB8fCBtaW47XG5cblx0bGV0IG1pZCA9IF9tc1sxXSB8fCBtaW47XG5cblx0cmV0dXJuIFttaW4sIG1pZCwgbWF4XTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0TWluTWlkTWF4O1xuLy9leHBvcnQgZGVmYXVsdCBleHBvcnRzO1xuIl19
{"version":3,"file":"re.js","sourceRoot":"","sources":["re.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAIH;;GAEG;AACU,QAAA,oBAAoB,GAAG,mBAAmB,CAAC;AAExD;;GAEG;AACU,QAAA,8BAA8B,GAAG,yBAAyB,CAAC;AAExE;;GAEG;AACU,QAAA,uBAAuB,GAAG,sCAAsC,CAAC;AAE9E;;;GAGG;AACH,SAAgB,YAAY,CAAC,EAAuB;IAEnD,OAAO,IAAI,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAA;AACxI,CAAC;AAHD,oCAGC;AAEY,QAAA,WAAW,GAAG,+BAA+B,CAAC;AAC9C,QAAA,YAAY,GAAG,gCAAgC,CAAC;AAEhD,QAAA,cAAc,GAAG,YAAY,CAAC;IAC1C,+BAAuB;IACvB,mBAAW;IACX,oBAAY;CACZ,CAAC,CAAC;AAEU,QAAA,MAAM,GAAG,UAAU,CAAC;AAEpB,QAAA,SAAS,GAAG,UAAU,CAAC;AAEvB,QAAA,2BAA2B,GAAG,kCAAkC,CAAC;AAEjE,QAAA,+BAA+B,GAAG,YAAY,CAAC;IAC3D,mCAA2B;IAC3B,cAAM;CACN,CAAC,CAAC;AAEU,QAAA,aAAa,GAAG,YAAY,CAAC;IACzC,mCAA2B;IAC3B,iBAAS;IACT,IAAI;CACJ,CAAC,CAAC;AAEU,QAAA,iBAAiB,GAAG,YAAY,CAAC;IAC7C,qBAAa;IACb,cAAM;CACN,CAAC,CAAC;AAEU,QAAA,kCAAkC,GAAG,YAAY,CAAC;IAC9D,sBAAc;IACd,uCAA+B;CAC/B,CAAC,CAAC;AAEU,QAAA,oBAAoB,GAAG,YAAY,CAAC;IAChD,0CAAkC;IAClC,iBAAS;IACT,IAAI;CACJ,CAAC,CAAC;AAEU,QAAA,6BAA6B,GAAG,IAAI,MAAM,CAAC,IAAI,0CAAkC,CAAC,MAAM,KAAK,0CAAkC,CAAC,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC;AAElJ,QAAA,eAAe,GAAG,IAAI,MAAM,CAAC,IAAI,4BAAoB,CAAC,MAAM,KAAK,4BAAoB,CAAC,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC;AAExG,QAAA,WAAW,GAAG,UAAU,CAAC;AACzB,QAAA,WAAW,GAAG,UAAU,CAAC","sourcesContent":["/**\n * @todo add move zero width\n */\n\nimport { ENUM_SPACE, ENUM_ZERO_WIDTH } from './const';\n\n/**\n * VARIATION SELECTOR-1 ~ VARIATION SELECTOR-16\n */\nexport const reVariationSelectors = /[\\uFE00-\\uFE0F]/ug;\n\n/**\n * VARIATION SELECTOR-17 ~ VARIATION SELECTOR-256\n */\nexport const reVariationSelectorsSupplement = /[\\u{E0100}-\\u{E01EF}]/ug;\n\n/**\n * VARIATION SELECTOR-1 ~ VARIATION SELECTOR-256\n */\nexport const reVariationSelectorsAll = /[\\uFE00-\\uFE0F\\u{E0100}-\\u{E01EF}]/ug;\n\n/**\n * simple merge, not real regexp merge\n * @private\n */\nexport function _regexpMerge(re: (string | RegExp)[])\n{\n\treturn new RegExp('[' + re.map(r => (typeof r === 'string' ? r : r.source).replace(/^\\[/, '').replace(/\\]$/, '')).join('') + ']', 'ug')\n}\n\nexport const reZeroWidth = /[\\u200b-\\u200f\\ufeff\\u2060]/ug;\nexport const reZeroWidth2 = /[\\u2028-\\u202F\\u205F-\\u206F]/ug;\n\nexport const reZeroWidthAll = _regexpMerge([\n\treVariationSelectorsAll,\n\treZeroWidth,\n\treZeroWidth2,\n]);\n\nexport const reNBSP = /\\u00a0/ug;\n\nexport const reNewLine = /[\\r\\n]/ug;\n\nexport const reRegExpSpaceWithoutNewLine = /[\\u0020\\u00a0\\t\\v\\u0008\\u000c]/ug;\n\nexport const reRegExpSpaceWithoutNewLinePlus = _regexpMerge([\n\treRegExpSpaceWithoutNewLine,\n\treNBSP,\n]);\n\nexport const reRegExpSpace = _regexpMerge([\n\treRegExpSpaceWithoutNewLine,\n\treNewLine,\n\t/\\s/,\n]);\n\nexport const reRegExpSpacePlus = _regexpMerge([\n\treRegExpSpace,\n\treNBSP,\n]);\n\nexport const reZeroWidthWithSpaceWithoutNewLine = _regexpMerge([\n\treZeroWidthAll,\n\treRegExpSpaceWithoutNewLinePlus,\n]);\n\nexport const reZeroWidthWithSpace = _regexpMerge([\n\treZeroWidthWithSpaceWithoutNewLine,\n\treNewLine,\n\t/\\s/,\n]);\n\nexport const reZeroWidthTrimWithoutNewLine = new RegExp(`^${reZeroWidthWithSpaceWithoutNewLine.source}+|${reZeroWidthWithSpaceWithoutNewLine.source}+$`, 'gu');\n\nexport const reZeroWidthTrim = new RegExp(`^${reZeroWidthWithSpace.source}+|${reZeroWidthWithSpace.source}+$`, 'gu');\n\nexport const reBomStrict = /^\\ufeff/u;\nexport const reBomUnsafe = /\\ufeff/ug;\n"]}